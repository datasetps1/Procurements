@model EditProjectBudgetViewModel
@{
    ViewData["Title"] = "Edit Project and Budget";
}

<h4>Edit Project and Budget</h4>
<hr />

<div class="form_container row" style="width: 100%; margin-bottom:100px;">
    <form asp-action="EditProjectBudgetPost" asp-controller="OrderView" class="form_style col-lg-6 col-md-8 col-sm-12 col-12">

        <div id="OrderHeader_dropdown" style="position:relative;">
            <div class="My_drop_down_title ddc">Order Code</div>
            <div class="input_container">
                <input type="hidden" id="selected_OrderHeader" asp-for="selected_OrderHeader_code" />
                <input id="My_drop_down_input-OrderHeader" type="text" class="My_drop_down_input ddc"
                       placeholder="Search here ..." asp-for="selected_OrderHeader_Name" />
                <i class="fas fa-chevron-circle-down input_icon"></i>
            </div>
            <div id="My_drop_down_container-OrderHeader" class="My_drop_down_container ddc">
                <div id="My_drop_down_list_result_OrderHeader" class="My_drop_down_list_result ddc">

                </div>
            </div>

        </div>

        <div id="ProjectName_dropdown" style="position:relative;    margin-top: 10px;">
            <div class="My_drop_down_title ddc">Project Name :</div>
            <div class="input_container ddc">
                <input type="hidden" id="selected_ProjectName" asp-for="selected_ProjectName_code" />
                <input id="My_drop_down_input-ProjectName" type="text" class="My_drop_down_input ddc"
                       placeholder="Search here ..." asp-for="selected_ProjectName_Name" />
                <i class="fas fa-chevron-circle-down input_icon ddc"></i>
            </div>
            <div id="My_drop_down_container-ProjectName" class="My_drop_down_container ddc">
                <div id="My_drop_down_list_result_ProjectName" class="My_drop_down_list_result ddc">

                </div>
            </div>

        </div>

        <div id="budgetLines_dropdown" style="position:relative;    margin-top: 10px;">
            <div class="My_drop_down_title ddc">Budget Line</div>
            <div class="input_container">
                <input type="hidden" id="selected_budgetLines" asp-for="selected_budgetLines_code" />
                <input id="My_drop_down_input-budgetLines" type="text" class="My_drop_down_input ddc"
                       placeholder="Search here ..." asp-for="selected_budgetLines_Name" />
                <i class="fas fa-chevron-circle-down input_icon"></i>
            </div>
            <div id="My_drop_down_container-budgetLines" class="My_drop_down_container ddc">
                <div id="My_drop_down_list_result_budgetLines" class="My_drop_down_list_result ddc">

                </div>
            </div>

        </div>


        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary form_submit_btn" style="border-radius: 30px; width: 94% !important; margin-left: 3%;    margin-top: 27px;" />
        </div>
    </form>
</div>

@section scripts{
    <script>

        var My_drop_down_container_BudgetLines = document.getElementById("My_drop_down_container-budgetLines");
        var My_drop_down_list_result_BudgetLines = document.getElementById("My_drop_down_list_result_budgetLines");
        var My_drop_down_list_result_OrderHeader = document.getElementById("My_drop_down_list_result_OrderHeader");
        var My_drop_down_list_result_ProjectName = document.getElementById("My_drop_down_list_result_ProjectName");

        var My_drop_down_input_OrderHeader = document.getElementById("My_drop_down_input-OrderHeader");

        var My_drop_down_input_budgetLines = document.getElementById("My_drop_down_input-budgetLines");
        var selected_budgetLines = document.getElementById("selected_budgetLines");

        var My_drop_down_input_ProjectName = document.getElementById("My_drop_down_input-ProjectName");
        var selected_ProjectName = document.getElementById("selected_ProjectName");



        //serialize array from viewBag
        var options_list_budgetLines = [];
        //serialize array from viewBag
        var options_list_OrderHeader = @Json.Serialize(ViewBag.OrderHeaders);
        var OrderHeaders_full_list = @Json.Serialize(ViewBag.OrderHeaders_full_list);
        //serialize array from viewBag
        var options_list_ProjectName = @Json.Serialize(ViewBag.ProjectName);

        //initialize the result list
        //options_list_budgetLines.forEach(current => {
        //    My_drop_down_list_result_BudgetLines.innerHTML += `
        //                    <div class="My_drop_down_list_result_item ddc" onclick="select_option('${current.id}' ,'${current.name}' , 'budgetLines')">
        //                        ${current.name}
        //                    </div>
        //            `;
        //});

        //initialize the result list
        options_list_OrderHeader.forEach(current => {
            My_drop_down_list_result_OrderHeader.innerHTML += `
                            <div class="My_drop_down_list_result_item ddc" onclick="select_option('${current.id}' ,'${current.name}', 'OrderHeader')">
                                ${current.name}
                            </div>
                    `;
        });

        //initialize the result list
        options_list_ProjectName.forEach(current => {
            My_drop_down_list_result_ProjectName.innerHTML += `
                            <div class="My_drop_down_list_result_item ddc" onclick="select_option('${current.id}' ,'${current.name}', 'ProjectName')">
                                ${current.name}
                            </div>
                    `;
        });

        //for searching
        window.addEventListener("keyup", function (e) {
            //reset the result element
            //if the event applied on dropdown input :
            if (e.target.id.includes("My_drop_down_input")) {
                //get the element unique word
                var unique_word = e.target.id.split('-')[1]

                var option_list_to_search = [];

                //decide which array to search :
                if (unique_word == "budgetLines") {
                    option_list_to_search = options_list_budgetLines;
                } else if (unique_word == "OrderHeader") {
                    option_list_to_search = options_list_OrderHeader;
                } else if (unique_word == "ProjectName") {
                    option_list_to_search = options_list_ProjectName;
                }

                var My_drop_down_list_result = document.getElementById('My_drop_down_list_result_' + unique_word);
                My_drop_down_list_result.innerHTML = "";
                //update ui result list:
                option_list_to_search.forEach(current => {
                    if (current.name.includes(e.target.value)) {
                        console.log(true);
                        My_drop_down_list_result.innerHTML += `
                                      <div class="My_drop_down_list_result_item ddc" onclick="select_option('${current.id}' ,'${current.name}','${unique_word}')">
                                             ${current.name}
                                      </div>
                        `;
                    }
                });
            }

        });

        //to open dropdown
        window.addEventListener("click", function (e) {
            console.log(e.target.id)
            var clicked_element_id = e.target.id;
            //if clicked_element is dropdown input open the related dropdown
            if (clicked_element_id.includes("My_drop_down_input")) {
                //get the element unique word
                var unique_word = clicked_element_id.split("-")[1]

                //get the dropdown container to open it
                var My_drop_down_container = document.getElementById(`My_drop_down_container-${unique_word}`)

                if (!My_drop_down_container.classList.contains("show_dropdown")) {
                    //close other dropdowns if they are opened

                    //get all dropdown containers
                    var dropdown_containers_list = document.querySelectorAll('[id*="My_drop_down_container"]')
                    //close them excpt the one we will open
                    dropdown_containers_list.forEach(current => {
                        if (!current.id.includes(unique_word)) {//if this dropdown is not the one we will open => colse it
                            if (current.classList.contains("show_dropdown")) {
                                //set z-index to default
                                document.getElementById(current.id.split("-")[1] + "_dropdown").style.zIndex = '';
                                //remove show class
                                current.classList.remove("show_dropdown");
                            }
                        }
                    });

                    //make dropdown appeare on top of others
                    document.getElementById(unique_word + "_dropdown").style.zIndex = '100';
                    My_drop_down_container.classList.add("show_dropdown");
                }
            }

        });

        //to close dropdown
        window.addEventListener("click", function (e) {
            //if the cliced element is not related to any dropdown
            if (!e.target.classList.contains("ddc")) {
                //close opened dropdown
                //get all dropdown containers
                var dropdown_containers_list = document.querySelectorAll('[id*="My_drop_down_container"]')
                //close them excpt the one we will open
                dropdown_containers_list.forEach(current => {
                    if (current.classList.contains("show_dropdown")) {
                        //set z-index to default
                        document.getElementById(current.id.split("-")[1] + "_dropdown").style.zIndex = '';
                        //remove show class
                        current.classList.remove("show_dropdown");
                    }
                });
            }
        });

        //when select options
        const select_option = (id, name, unique_word) => {
            // close_dropdown :
            if (document.getElementById("My_drop_down_container-" + unique_word).classList.contains("show_dropdown")) {
                document.getElementById(unique_word + "_dropdown").style.zIndex = '';
                document.getElementById("My_drop_down_container-" + unique_word).classList.remove("show_dropdown");
            }
            //change selected_option
            document.getElementById('selected_' + unique_word).value = id;
            //change input value
            document.getElementById('My_drop_down_input-' + unique_word).value = name;


            //custom code : ------------------------------------------------------------------

            //if this is an order header : search for project and budgetlines if the exist
            if (unique_word == "OrderHeader") {
                //get it from full header :
                var order = null;
                for (var i = 0; i < OrderHeaders_full_list.length; i++) {
                    if (OrderHeaders_full_list[i].orderHeaderCode == id) {
                        order = OrderHeaders_full_list[i];
                        break;
                    }
                }

                //result inputs:
                My_drop_down_input_ProjectName.value = "";
                selected_ProjectName.value = "";
                var theres_projectName = false;
                //if order have project -> then get its name :
                for (var i = 0; i < options_list_ProjectName.length; i++) {
                    if (options_list_ProjectName[i].id == order.orderHeaderProjectCode) {
                        theres_projectName = true;
                        My_drop_down_input_ProjectName.value = options_list_ProjectName[i].name;
                        selected_ProjectName.value = options_list_ProjectName[i].id;
                        break;
                    }
                }

                //if there is a project name => get the related budgetlines and update budgetline resluts , and get budgetline if it exist :
                if (theres_projectName) {
                    $.ajax({
                        url: '@Url.Action("GetBudgetLineByFunderData", "orderview")',
                        type: 'POST',
                        data: { "Fundercode": order.orderHeaderProjectCode },
                        success: (response) => {
                            var edited_array = response.data.map(current => (
                                {
                                    id: current.code,
                                    name:current.name
                                }
                            ));
                            options_list_budgetLines = edited_array;
                            console.log(edited_array)

                            //update budget line dropdown :
                            var My_drop_down_list_result_budgetLines = document.getElementById('My_drop_down_list_result_budgetLines');
                            My_drop_down_list_result_budgetLines.innerHTML = "";
                            //update ui result list:
                            options_list_budgetLines.forEach(current => {
                                My_drop_down_list_result_budgetLines.innerHTML += `
                                 <div class="My_drop_down_list_result_item ddc" onclick="select_option('${current.id}' ,'${current.name}','budgetLines')">
                                        ${current.name}
                                 </div>
                            `;
                            });
                            //get budgetline if it exist and display it : 
                            //result inputs:
                            My_drop_down_input_budgetLines.value = "";
                            selected_budgetLines.value = "";
                            //if order have budgetline -> then get its name :
                            for (var i = 0; i < options_list_budgetLines.length; i++) {
                                if (options_list_budgetLines[i].id == order.orderHeaderBudgetLineCode) {
                                    My_drop_down_input_budgetLines.value = options_list_budgetLines[i].name;
                                    selected_budgetLines.value = options_list_budgetLines[i].id;
                                    break;
                                }
                            }
                        },
                        error: (response) => {
                            console.log(response)
                        }
                    });
                }



            } else if (unique_word == "ProjectName") {
                //if project name changes then clean budget line inputs

                My_drop_down_input_budgetLines.value = "";
                selected_budgetLines.value = "";

                //get budgetlines which are related to the project name

                $.ajax({
                    url: '@Url.Action("GetBudgetLineByFunderData", "orderview")',
                    type: 'POST',
                    data: { "Fundercode": id },
                    success: (response) => {
                        var edited_array = response.data.map(current => (
                            {
                                id: current.code,
                                name: current.name
                            }
                        ));
                        options_list_budgetLines = edited_array;
                        console.log(edited_array)

                        //update budget line dropdown :
                        var My_drop_down_list_result_budgetLines = document.getElementById('My_drop_down_list_result_budgetLines');
                        My_drop_down_list_result_budgetLines.innerHTML = "";
                        //update ui result list:
                        options_list_budgetLines.forEach(current => {
                            My_drop_down_list_result_budgetLines.innerHTML += `
                                 <div class="My_drop_down_list_result_item ddc" onclick="select_option('${current.id}' ,'${current.name}','budgetLines')">
                                        ${current.name}
                                 </div>
                            `;
                        });
                    },
                    error: (response) => {
                        console.log(response)
                    }
                })
            }

        }
    </script>
}